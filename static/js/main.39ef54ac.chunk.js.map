{"version":3,"sources":["reportWebVitals.js","Component/Card.js","Component/CardList.js","Component/Searchbox.js","Component/Scroll.js","Container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","username","email","id","className","alt","src","CardList","robots","map","user","i","name","Searchbox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","App","onSearchChange","event","setState","target","value","console","log","state","this","filteredRobots","filter","robot","toLowerCase","includes","fetch","response","json","users","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCQCQ,EAbJ,SAAC,GACX,IADYC,EACb,EADaA,SAASC,EACtB,EADsBA,MAAMC,EAC5B,EAD4BA,GAExB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,cAAcC,IAAG,+BAA0BH,EAA1B,mBAC1B,gCACI,6BAAKF,IACL,6BAAKC,WCcNK,EAnBA,SAAC,GACX,IADYC,EACb,EADaA,OAET,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GAEb,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdS,KAAMJ,EAAOG,GAAGC,KAChBX,SAAUO,EAAOG,GAAGV,SACpBC,MAAOM,EAAOG,GAAGT,OAJZS,SCGVE,EAbC,SAAC,GACjB,EADkBC,YACjB,IAD6BC,EAC9B,EAD8BA,aAE1B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,wBACZC,SAAWH,OCCRI,EATF,SAACC,GAEV,OACA,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,SAAvC,SACKH,EAAMI,YC6CAC,E,kDA3CX,aACC,IAAD,8BACI,gBAQJC,eAAe,SAACC,GAEZ,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,QACxCC,QAAQC,IAAIL,EAAME,OAAOC,QAVzB,EAAKG,MACL,CACIzB,OAAQ,GACRM,YAAY,IALpB,E,qDAgBC,IAAD,EACgCoB,KAAKD,MAA1BzB,EADX,EACWA,OAAQM,EADnB,EACmBA,YACTqB,EAAe3B,EAAO4B,QAAO,SAAAC,GAC/B,OAAOA,EAAMpC,SAASqC,cAAcC,SAASzB,EAAYwB,kBAG7D,OACI,sBAAKlC,UAAU,KAAf,UACI,oBAAIA,UAAU,QAAd,wBACA,cAAC,EAAD,CAAWW,aAAcmB,KAAKR,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ2B,W,0CAOjC,IAAD,OACIK,MAAM,8CACL9C,MAAK,SAAA+C,GAAQ,OAAGA,EAASC,UACzBhD,MAAK,SAAAiD,GAAK,OAAE,EAAKf,SAAS,CAACpB,OAAOmC,W,GAxCzBC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.39ef54ac.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card=({username,email,id})=>\r\n{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\r\n            <img alt='Cricket Pic' src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n                <h1>{username}</h1>\r\n                <p1>{email}</p1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n// import { robots } from './robots'\r\n\r\nconst CardList=({robots})=>\r\n    {\r\n        return(\r\n            <div>\r\n            {\r\n                robots.map((user,i)=>\r\n                {\r\n                    return <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    username={robots[i].username} \r\n                    email={robots[i].email}/>\r\n                }\r\n                )}\r\n            </div>\r\n            );\r\n    };\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox=({searchField,searchChange})=>\r\n{\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search for Cricketers'\r\n            onChange= {searchChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>\r\n{\r\n    return (\r\n    <div style={{overflow:'scroll', height:'800px'}}>\r\n        {props.children}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../Component/CardList';\r\n// import {robots} from './robots';\r\nimport Searchbox from '../Component/Searchbox';\r\nimport Scroll from '../Component/Scroll';\r\n\r\nclass App extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state=\r\n        {\r\n            robots: [],\r\n            searchField:''\r\n        }\r\n    }\r\n\r\n    onSearchChange=(event)=>\r\n    {\r\n        this.setState({searchField:event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {robots, searchField}=this.state;\r\n        const filteredRobots=robots.filter(robot=>{\r\n            return robot.username.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='white'>Bot Search</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n   \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Container/App'\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}